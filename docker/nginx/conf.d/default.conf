upstream dispatch {
    server nodejs:8000;
}

upstream tracking {
    server nodejs:8001;
}

upstream restaurant-panel {
    server nodejs:8003;
}

server {

    root /srv/coopcycle/web;

    # prevents 502 bad gateway error
    large_client_header_buffers 8 32k;

    location /tracking {
        include /etc/nginx/conf.d/websocket_config;
        proxy_pass http://tracking;
        proxy_redirect off;
    }

    location /restaurant-panel {
        include /etc/nginx/conf.d/websocket_config;
        proxy_pass http://restaurant-panel;
        proxy_redirect off;
    }

    location /dispatch {
        include /etc/nginx/conf.d/websocket_config;
        proxy_pass http://dispatch;
        proxy_redirect off;
    }

    location / {
        # try to serve file directly, fallback to app.php
        try_files $uri /app_dev.php$is_args$args;
    }

    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|$) {
        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    error_log /var/log/nginx/coopcycle.error.log;
    access_log /var/log/nginx/coopcycle.access.log;
}
